PostgreSQL由5大部分组成：连接管理系统、编译执行系统、存储管理系统、事务系统、系统表。
连接管理系统:接受外部操作对系统的请求，对操作请求进行预处理和分发，起系统逻辑控制的作用
编译执行系统由查询编译器、查询执行器组成，完成操作请求在数据库中的分析处理和转化工作，最终实现物理存储介质中数据的操作
存储管理系统由索引管理器、内存管理器、外存管理器组成，负责存储和管理物理数据，提供对编译查询系统的支持
事务系统由事务管理器、日志管理器、并发控制、锁管理器组成，日志管理器和事务管理器完成对操作请求处理的事务一致性支持，锁管理器和并发控制提供对并发访问数据的一致性支持
系统表是PostgreSQL数据库的元信息管理中心，包括数据库对象信息和数据库管理控制信息。系统表管理元数据信息，将PostgreSQL数据库的各个模块有机的连接在一起，形成一个搞笑的数据管理系统。


2.1系统表
	系统表扮演着数据字典的角色。
	每一个数据库都有一套自己的系统表，其中大多数系统表都是在数据库创建时从模板数据库中拷贝过来的。只有少数系统表是所有数据库共享的（比如：pg_database）,这些表里的数据时关于所有数据库的。

2.1.1 主要的系统表功能及依赖关系

	1.pg_namespace
	用于存储命名空间
	名字空间层次：数据库.模式.表.属性。
	每一个元组都对应一个名字空间，每一个名字空间对应一个OID。

	2.pg_tablespqce
	存储表空间信息。所有的数据库共享一个pg_tablespqce表
	用处：第一，当分区或卷空间已用光，可以通过表空间去利用另一个分区的空间；第二，允许管理员根据数据库对象的使用模式安排数据位置，从而优化性能。
	每一个元组都对应一个表空间，每一个表空间都被分配一个OID。

	3.pg_database
	存放当前数据集簇中数据库的信息，在整个集簇范围内共享的系统表。每一个元组表示集簇中的一个数据库，每一个数据库都被分配一个OID。

	4.pg_class
	存储表及表类似结构的数据库对象信息，包含索引、序列、视图、复合数据类型、TOAST表。每一个对象都在pg_class中表现为一个元组，每一个对象都被分配一个OID。

	5.pg_type
	存储数据类型信息。基本数据类型由CREATE TYPE创建，域类型由CREATE DOMAIN创建，复合数据类型在表创建时自动创建。pg_type中的每一个元组对应一个数据类型。
	
	6.pg_attribute
	存储表的属性信息，对于数据库中表的每个属性都有一个元组。

	7.pg_index
	存储索引的具体信息。

2.1.2 系统视图
	内置的视图，初始化数据库集簇的时候读取脚本创建的。系统视图提供了查询系统表和访问数据库内部状态的方法。
	系统表是PostgreSQL数据库系统运行控制信息的来源，是数据库系统的核心组成部分。虽然用户可以操作，但为维护系统表信息的一致性，系统表将由系统统一维护。

2.2 数据库集簇
	PostgreSQL安装完成之后，必须先使用initdb程序初始化磁盘上的数据库存储区，即数据库集簇，由PostgreSQL管理的用户数据库以及系统数据库总称为数据库集簇。PostgreSQL的所有数据都存储在其数据目录里，这个数据目录用环境变量PSDATA来引用，PGDATA代指数据目录。
	
	OID用来在整个数据库中唯一的标识一个数据对象，这个对象可以说是数据库、表、索引、视图、元组、类型等。PostgreSQL提供了Oid数据类型来表示OID，它实际上是一个无符号整数。

	初始化数据集簇包括创建包含数据库系统所有数据的数据目录、创建共享的系统表、创建其他的配置文件和控制文件，并创建3个数据库：模板数据库template1和template0、默认的用户数据库postgres。以后用户穿件一个新数据库时，template1数据库的所有内容（包括系统表文件）都会拷贝过来，因此任何在template1里面安装的内容都自动拷贝到之后创建的数据库中。template0和postgres都是通过拷贝templ1创建的。

2.2.1 initdb的使用

2.2.2 postgres.bki

2.2.3 initdb的执行过程

2.2.4 系统数据库

2.3 PostgreSQL进程结构
	PostgreSQL系统的主要功能都集中在postgres程序，其入口是Main模块中的main函数。
	PostgreSQL使用一种专用的服务器进程体系结构，最主要的两个进程就是守护进程Postmaster和服务进程Postgres。从本质上来说，
	PostgreSQL系统几乎所有核心功能都是由postgres程序完成的。

2.4 守护进程Postmaster
	Postmaster是一个处理客户端请求的调度中心。

2.4.1 初始化内存上下文
	可以通过释放内存上下文来避免内存泄露

2.4.2 配置参数
	在初始化内存环境之后需要配置Postmaster运行时所需的各种参数。GUC模块实现了多种数据类型的变量配置
	参数有6中类型，通过枚举类型GucContext定义，只能在合适的环境下进行配置
	每一种数据类型的GUC参数都有两部分组成：共性部分和特性部分。每一种具体的数据类型都有其特性的数据结构，该结构中的第一项都是指向其共性数据结构的指针。
	1、初始化GUC参数：先统计参数个数，分配指针；将每个参数设置为默认值；调用getenv来或得环境变量；检查系统最大安全栈深度。
	2、配置GUC参数
	3、读取配置文件

2.4.3 创建监听套接字

2.4.4 注册信号处理函数
	进程有权选择相应或屏蔽信号（SIGKILL和SIGSTOP不能屏蔽）。Postmaster定义了三个信号集：BlockSig是要屏蔽的信号集；UnBlockSig是不希望被屏蔽的信号集；AuthBlockSig是在用户进行连接认证时需要屏蔽的信号集，它们都是位向量。
	在设置响应信号的处理函数前，要通过PG_SETMASK函数把这些信号全部屏蔽，然后通过pqsignal函数为感兴趣的信号设置处理函数。
	1、信号处理函数SIGHUP_handler
	配置文件发生改变时产生SIGHUP信号。Postmaster进程收到该信号时，重新读取配置文件postgresql.conf，然后向子进程发出同样的信号，并重新装载pg_hba.conf和pg_ident.conf文件。
	2、信号处理函数pmdie
	pmdie处理三种信号：SIGTERM、SIGINT和SIGQUIT。三种信号分别对应三种不同的系统关闭方式
	3、信号处理函数reaper
	
	