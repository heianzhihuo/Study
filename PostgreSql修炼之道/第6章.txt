第6章 逻辑结构管理

6.3 模式

6.3.1 模式的定义
	模式是一个命名空间或目录
	允许多个用户在使用同一个数据库时彼此互不干扰
	把数据库对象放在不同模式下，组织成逻辑组，让它们便于管理
	第三方的应用可以放在不同的模式中，这样不会和其他对象的名字冲突

6.3.2 模式的用法

6.4 表

6.4.2 表的存储属性
	TOAST技术“The Oversized-Attribute Storage Technique”，主要用于存储大字段值。由于PostgreSQL的页面大小是固定的，为8KB，并且不允许行跨越多个页面。为了突破这个限制，大的字段值通常被压缩或切片成多个物理行存到另一张系统表中（TOAST表）。

6.4.3 临时表
	回话级临时表	CREATE temporary table
	只在同一个回话中可以访问
	
	事务级临时表 CREATE temporary table (....) on commit delete rows;
	on commit preserve rows：若不带on commit 子名，默认情况下，数据会一直存在于整个回话周期中
	on commit delete rows：数据值存在事务周期中，事务一提交，数据就消失了
	on commit drop：数据值存在于事务周期中，事务一提交，临时表就消失了。

6.4.4 默认值

6.4.5 约束
	检查约束
	非空约束
	唯一约束
	主键
	外键约束

6.4.6 修改表
	增加字段
	删除字段
	增加约束
	删除约束
	修改默认值
	删除默认值
	修改字段数据类型
	重命名字段

6.4.7 表继承
6.4.8 分区表
	分区表的功能依赖于表继承功能

6.5 触发器

6.5.2 语句级触发器与行级触发器

6.5.3 BEFORE触发器和AFTER触发器

6.5.4 删除触发器


6.7 表空间

6.8 视图

6.8.2 创建视图

6.9 索引

6.9.2 索引的分类

	GiST：不是单独的索引类型，而是一种架构。包含了用于二维几何数据类型的GiST操作符类。比如一个图形包含另一个图形的操作符“@>”,一个图形在另一个图形左边且没有重叠的操作符“<<”.
	SP-Gist：SP-GiST是“space-partitioned GiST”的缩写，即空间分区GiST索引。

6.9.3 创建索引
6.9.4 创建并发索引
	由于在创建索引过程中PostgreSQL会锁定表以防止写入，然后对表做全表扫描，从而完成创建索引操作。在此过程中，其他用户可以读取表，但是插入、更新、删除操作等将一直被阻塞，直到索引创建完毕。这种长时间的阻塞状态有时是不可接受的。因此PostgreSQL支持在不长时间阻塞更新的情况下创建索引。

6.9.5 修改索引
6.9.6 删除索引

6.10 用户权限及管理


