第9章 中位数和顺序统计量

找数组中第i小的元素

RANDOMIZED-SELECT算法

该算法与快排思想相近，但是该算法在递归过程中，少处理一个分支，而快排需要处理两个分支，因此该算法期望时间复杂度为O(n)。

最坏情况下，运行时间为O(n^2)。


最坏情况为线性时间的选择算法

算法基本思想和快排划分思想类似

1、该算法把n个元素划分成若干组，每组5个元素，最后一组不满5个
2、寻找所有组中的中位数：对每组元素进行插入排序，然后确定其中位数
3、找出上述中位数中的中位数x
4、按中位数的中位数x对输入数组进行划分。让k比划分的低区中元素多1，因此x是第k小的元素，且有n-k个元素在划分的高区
5、如果i=k，则返回x。如果i<k，则在低区调用SELECT选择第i小的元素。否则在高区选择第i小的元素。

该算法的相比之前的算法，在划分上做的更好，能够把数组均匀分成两部分，但是同时引入了新的代价，即寻找中位数。

最终有递归式	T(n) <= O(1)	若n<140
		T(n)<=T(n/5)+T(7n/10+6)+O(n)	若n>=140
