第14章 数据结构的扩张

14.1 顺序统计量
	元素的秩：一个元素在集合线性序的位置。	

	顺序统计树T只是简单的在每个节点上存储附加信息的一棵红黑树。支持快速顺序统计操作。
	顺序统计树的每个节点还包含一个属性x.size。这个属性包含了以x为根的子树（包括x本身）的结点数，即这棵子树的大小。如果定义哨兵的大小为0，也就是设置T.nil.size为0，则有等式：x.size = x.left.size + x.right.size + 1	
	在顺序统计树中要求各个关键字各不相同。通过定义一个元素的秩为在中序遍历树叶的输出位置。
	
	
	查找具有给定秩的元素
	查找以x为根的子树中包含第i小的关键字的结点。
	
	确定一个元素的秩
	

	对子树规模的维护
	由于红黑树的维护操作都是旋转操作，且旋转次数至多为2，且旋转是一种局部操作，它仅会是两个节点的size属性失效，而围绕旋转操作的链就是与这两个节点关联。


14.2 如何扩张数据结构

	扩张一种数据结构分为4个步骤：
	1.选择一种基础数据结构
	2.确定基础数据结构中要维护的信息
	3.检验基础数据结构上基本修改操作能否维护附加信息。
	4.设计一些新的操作

14.3 区间树
	对动态集合进行维护的红黑树，其中每个元素x都包含一个区间x.int。

	步骤1：基础数据结构
	选择一棵红黑树，其每个节点x包含一个区间属性x.int，且x的关键字为区间的低端点x.int.low。因此该数据结构的中序遍历序列就是按低端点的次序排列的各个区间。
	步骤2：附加信息
	每个节点x除了自身区间信息外，还包含一个值x.max，它是以x为根的子树中所有区间端点的最大值
	步骤3：对信息维护
	必须验证n个节点的区间树上插入和删除操作能否在O(lgn)时间内完成。通过给定区间x.int和节点x的子节点的max值，可以确定x.max值：
		x.max = max(x.int.high,x.left.max,x.right.max)
	根据定理14.1可知，插入和删除操作的运行时间为O(lgn)。事实上，在一次旋转后，更新max属性只需O(1)时间。
	步骤4：设计新的操作
	新的操作INTERVAL-SEARCH(T,i),它是用来找出树T中与区间i重叠的那个节点。
